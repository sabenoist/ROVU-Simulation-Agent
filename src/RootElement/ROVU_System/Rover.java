// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package RootElement.ROVU_System;

import javax.vecmath.Vector3d;

import RootElement.ROVU_System.Coordinate;
import RootElement.ROVU_System.RoverEnum;
import RootElement.ROVU_System.Zone;
import simbad.sim.Agent;

/************************************************************/
/**
 * 
 */
public abstract class Rover extends Agent implements ObserverInterface{
	
	private String roverName;
	private RoverEnum type;
	private String status;
	private Zone zone;
	private Coordinate initialPosition;
	private int initialDirection;
	private int velocity;
	private Subject subject;
	
	public Rover(Vector3d initPos, String name) {
		super(initPos, name);
		System.out.printf("Rover name: %s\n", name);
	}
	
	public String getRoverName(){
		return roverName;
	}
	public void setRoverName(String s){
		roverName = s;
	}
	
	public RoverEnum getType(){
		return type;
	}
	public void setType(RoverEnum t){
		type = t;
	}
	
	public String getStatus(){
		return status;
	}
	public void setStatus(String s){
		status = s;
	}
	
	public Zone getZone(){
		return zone;
	}
	public void setZone(Zone z){
		zone = z;
	}
	
	public Coordinate getInitialPosition(){
		return initialPosition;
	}
	public void setInitialPosition(Coordinate c){
		initialPosition = c;
	}
	
	public int getInitialDirection(){
		return initialDirection;
	}
	public void setInitialDirection(int i){
		initialDirection = i;
	}
	
	public int getVelocity(){
		return velocity;
	}
	public void setVelocity(int v){
		velocity = v;
	}
	
	public Subject getSubject(){
		return subject;
	}
	public void setSubject(Subject s){
		subject = s;
	}
	
/* 							dit was vrij dom design		
 	public void initBehavior() {
	}

	public void performBehavior() {
	}

	public void rotate(int degrees) {
	}

	public void move(int direction) {
	}
*/
};
